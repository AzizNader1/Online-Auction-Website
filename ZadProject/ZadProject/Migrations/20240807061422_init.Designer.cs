// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZadProject.Data;

#nullable disable

namespace ZadProject.Migrations
{
    [DbContext(typeof(ZadDbContext))]
    [Migration("20240807061422_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZadProject.Models.Bank", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankId"));

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankId");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("ZadProject.Models.BidingCarAuction", b =>
                {
                    b.Property<int>("BidingCarAuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidingCarAuctionId"));

                    b.Property<DateTime>("BidingDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("BidingPrice")
                        .HasColumnType("float");

                    b.Property<int>("CarAuctionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BidingCarAuctionId");

                    b.HasIndex("CarAuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("BidingCarAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.BidingOtherAuction", b =>
                {
                    b.Property<int>("BidingOtherAuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidingOtherAuctionId"));

                    b.Property<DateTime>("BidingDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("BidingPrice")
                        .HasColumnType("float");

                    b.Property<int>("OtherAuctionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("BidingOtherAuctionId");

                    b.HasIndex("OtherAuctionId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("BidingOtherAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.BidingRealStateAuction", b =>
                {
                    b.Property<int>("BidingRealStateAuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidingRealStateAuctionId"));

                    b.Property<DateTime>("BidingDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("BidingPrice")
                        .HasColumnType("float");

                    b.Property<int>("RealStateAuctionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BidingRealStateAuctionId");

                    b.HasIndex("RealStateAuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("BidingRealStateAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.BuyingCarAuction", b =>
                {
                    b.Property<int>("BuyingCarAuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuyingCarAuctionId"));

                    b.Property<int>("CarAuctionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BuyingCarAuctionId");

                    b.HasIndex("CarAuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("BuyingCarAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.BuyingOtherAuction", b =>
                {
                    b.Property<int>("BuyingOtherAuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuyingOtherAuctionId"));

                    b.Property<int>("OtherAuctionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BuyingOtherAuctionId");

                    b.HasIndex("OtherAuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("BuyingOtherAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.BuyingRealStateAuction", b =>
                {
                    b.Property<int>("BuyingRealStateAuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuyingRealStateAuctionId"));

                    b.Property<int>("RealStateAuctinoId")
                        .HasColumnType("int");

                    b.Property<int>("RealStateAuctionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BuyingRealStateAuctionId");

                    b.HasIndex("RealStateAuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("BuyingRealStateAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.CarAuction", b =>
                {
                    b.Property<int>("CarAuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarAuctionId"));

                    b.Property<int>("AccidentBefore")
                        .HasColumnType("int");

                    b.Property<DateTime>("AuctionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuctionImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AuctionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuctionStatus")
                        .HasColumnType("int");

                    b.Property<string>("AuctionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarModel")
                        .HasColumnType("int");

                    b.Property<int>("Colors")
                        .HasColumnType("int");

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<int>("FuelType")
                        .HasColumnType("int");

                    b.Property<int>("MinimunSalePrice")
                        .HasColumnType("int");

                    b.Property<int>("NOK")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfOwner")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartingPrice")
                        .HasColumnType("int");

                    b.Property<int>("TechnicalInspection")
                        .HasColumnType("int");

                    b.Property<int>("TireCondition")
                        .HasColumnType("int");

                    b.Property<int>("TransmisssionType")
                        .HasColumnType("int");

                    b.Property<string>("VideoLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.Property<int>("YearOfManufacture")
                        .HasColumnType("int");

                    b.HasKey("CarAuctionId");

                    b.ToTable("CarAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.OtherAuction", b =>
                {
                    b.Property<int>("OtherAuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtherAuctionId"));

                    b.Property<int>("AuctionCategory")
                        .HasColumnType("int");

                    b.Property<string>("AuctionCoverImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuctionDesctibtion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AuctionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuctionProdutName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AuctionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("AuctionStartPrice")
                        .HasColumnType("float");

                    b.Property<int>("AuctionStatus")
                        .HasColumnType("int");

                    b.Property<double>("MinimunSalePrice")
                        .HasColumnType("float");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OtherAuctionId");

                    b.ToTable("OtherAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.RealStateAuction", b =>
                {
                    b.Property<int>("RealStateAuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RealStateAuctionId"));

                    b.Property<DateTime>("AuctionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuctionImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AuctionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuctionStatus")
                        .HasColumnType("int");

                    b.Property<string>("AuctionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<string>("HouseAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseSize")
                        .HasColumnType("int");

                    b.Property<int>("MinimunSalePrice")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfBathrooms")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Parking")
                        .HasColumnType("int");

                    b.Property<int>("StartingPrice")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfProperty")
                        .HasColumnType("int");

                    b.Property<string>("VideoLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfBuild")
                        .HasColumnType("int");

                    b.HasKey("RealStateAuctionId");

                    b.ToTable("RealStateAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("NationalIdImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ZadProject.Models.UserAccount", b =>
                {
                    b.Property<int>("UserAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserAccountId"));

                    b.Property<double>("AccountBalance")
                        .HasColumnType("float");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int>("CvvNumber")
                        .HasColumnType("int");

                    b.Property<string>("ExpireDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserAccountId");

                    b.HasIndex("BankId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("ZadProject.Models.BidingCarAuction", b =>
                {
                    b.HasOne("ZadProject.Models.CarAuction", "CarAuction")
                        .WithMany("BidingCarAuctions")
                        .HasForeignKey("CarAuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZadProject.Models.User", "User")
                        .WithMany("BidingCarAuctions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarAuction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZadProject.Models.BidingOtherAuction", b =>
                {
                    b.HasOne("ZadProject.Models.OtherAuction", "OtherAuction")
                        .WithMany("BidingOtherAuctions")
                        .HasForeignKey("OtherAuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZadProject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ZadProject.Models.User", null)
                        .WithMany("BidingOtherAuctions")
                        .HasForeignKey("UserId1");

                    b.Navigation("OtherAuction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZadProject.Models.BidingRealStateAuction", b =>
                {
                    b.HasOne("ZadProject.Models.RealStateAuction", "RealStateAuction")
                        .WithMany("BidingRealStateAuctions")
                        .HasForeignKey("RealStateAuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZadProject.Models.User", "User")
                        .WithMany("BidingRealStateAuctions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RealStateAuction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZadProject.Models.BuyingCarAuction", b =>
                {
                    b.HasOne("ZadProject.Models.CarAuction", "CarAuction")
                        .WithMany()
                        .HasForeignKey("CarAuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZadProject.Models.User", "User")
                        .WithMany("BuyingCarAuctions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarAuction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZadProject.Models.BuyingOtherAuction", b =>
                {
                    b.HasOne("ZadProject.Models.OtherAuction", "OtherAuction")
                        .WithMany()
                        .HasForeignKey("OtherAuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZadProject.Models.User", "User")
                        .WithMany("BuyingOtherAuctions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OtherAuction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZadProject.Models.BuyingRealStateAuction", b =>
                {
                    b.HasOne("ZadProject.Models.RealStateAuction", "RealStateAuction")
                        .WithMany()
                        .HasForeignKey("RealStateAuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZadProject.Models.User", "User")
                        .WithMany("BuyingRealStateAuctions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RealStateAuction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZadProject.Models.UserAccount", b =>
                {
                    b.HasOne("ZadProject.Models.Bank", "Bank")
                        .WithMany("UserAccounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZadProject.Models.User", "User")
                        .WithMany("UserAccounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ZadProject.Models.Bank", b =>
                {
                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("ZadProject.Models.CarAuction", b =>
                {
                    b.Navigation("BidingCarAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.OtherAuction", b =>
                {
                    b.Navigation("BidingOtherAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.RealStateAuction", b =>
                {
                    b.Navigation("BidingRealStateAuctions");
                });

            modelBuilder.Entity("ZadProject.Models.User", b =>
                {
                    b.Navigation("BidingCarAuctions");

                    b.Navigation("BidingOtherAuctions");

                    b.Navigation("BidingRealStateAuctions");

                    b.Navigation("BuyingCarAuctions");

                    b.Navigation("BuyingOtherAuctions");

                    b.Navigation("BuyingRealStateAuctions");

                    b.Navigation("UserAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
